//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.28307.421
// 
namespace IOT_Game.GameServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/IOT.Entities")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private string GenderField;
        
        private string JobField;
        
        private string LastNameField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private string RoleNameField;
        
        private string TcNoField;
        
        private int UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Job {
            get {
                return this.JobField;
            }
            set {
                if ((object.ReferenceEquals(this.JobField, value) != true)) {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TcNo {
            get {
                return this.TcNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TcNoField, value) != true)) {
                    this.TcNoField = value;
                    this.RaisePropertyChanged("TcNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/IOT.Entities")]
    public partial class Question : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CategoryIDField;
        
        private System.Nullable<int> DodIDField;
        
        private int QuestionIDField;
        
        private string QuestionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DodID {
            get {
                return this.DodIDField;
            }
            set {
                if ((this.DodIDField.Equals(value) != true)) {
                    this.DodIDField = value;
                    this.RaisePropertyChanged("DodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionName {
            get {
                return this.QuestionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionNameField, value) != true)) {
                    this.QuestionNameField = value;
                    this.RaisePropertyChanged("QuestionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/IOT.Entities")]
    public partial class Category : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CategoryIDField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RankViewModel", Namespace="http://schemas.datacontract.org/2004/07/IOT.Entities.ViewModel")]
    public partial class RankViewModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> PrizeIdField;
        
        private int PrizeTotalField;
        
        private int RankingIDField;
        
        private System.Nullable<int> UserIDField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrizeId {
            get {
                return this.PrizeIdField;
            }
            set {
                if ((this.PrizeIdField.Equals(value) != true)) {
                    this.PrizeIdField = value;
                    this.RaisePropertyChanged("PrizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrizeTotal {
            get {
                return this.PrizeTotalField;
            }
            set {
                if ((this.PrizeTotalField.Equals(value) != true)) {
                    this.PrizeTotalField = value;
                    this.RaisePropertyChanged("PrizeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RankingID {
            get {
                return this.RankingIDField;
            }
            set {
                if ((this.RankingIDField.Equals(value) != true)) {
                    this.RankingIDField = value;
                    this.RaisePropertyChanged("RankingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServiceReference.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LoginUser", ReplyAction="http://tempuri.org/IGameService/LoginUserResponse")]
        System.Threading.Tasks.Task<IOT_Game.GameServiceReference.User> LoginUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetUsers", ReplyAction="http://tempuri.org/IGameService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.User>> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddUser", ReplyAction="http://tempuri.org/IGameService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(IOT_Game.GameServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveUser", ReplyAction="http://tempuri.org/IGameService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/EditUser", ReplyAction="http://tempuri.org/IGameService/EditUserResponse")]
        System.Threading.Tasks.Task EditUserAsync(IOT_Game.GameServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UserControl", ReplyAction="http://tempuri.org/IGameService/UserControlResponse")]
        System.Threading.Tasks.Task<bool> UserControlAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetQuestions", ReplyAction="http://tempuri.org/IGameService/GetQuestionsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.Question>> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddQuestion", ReplyAction="http://tempuri.org/IGameService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(IOT_Game.GameServiceReference.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveQuestion", ReplyAction="http://tempuri.org/IGameService/RemoveQuestionResponse")]
        System.Threading.Tasks.Task RemoveQuestionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/EditQuestion", ReplyAction="http://tempuri.org/IGameService/EditQuestionResponse")]
        System.Threading.Tasks.Task EditQuestionAsync(IOT_Game.GameServiceReference.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetCategory", ReplyAction="http://tempuri.org/IGameService/GetCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.Category>> GetCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetRanks", ReplyAction="http://tempuri.org/IGameService/GetRanksResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.RankViewModel>> GetRanksAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : IOT_Game.GameServiceReference.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<IOT_Game.GameServiceReference.IGameService>, IOT_Game.GameServiceReference.IGameService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GameServiceClient() : 
                base(GameServiceClient.GetDefaultBinding(), GameServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IGameService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), GameServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<IOT_Game.GameServiceReference.User> LoginUserAsync(string username, string password) {
            return base.Channel.LoginUserAsync(username, password);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.User>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Threading.Tasks.Task AddUserAsync(IOT_Game.GameServiceReference.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(int id) {
            return base.Channel.RemoveUserAsync(id);
        }
        
        public System.Threading.Tasks.Task EditUserAsync(IOT_Game.GameServiceReference.User user) {
            return base.Channel.EditUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> UserControlAsync(string Username) {
            return base.Channel.UserControlAsync(Username);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.Question>> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(IOT_Game.GameServiceReference.Question question) {
            return base.Channel.AddQuestionAsync(question);
        }
        
        public System.Threading.Tasks.Task RemoveQuestionAsync(int id) {
            return base.Channel.RemoveQuestionAsync(id);
        }
        
        public System.Threading.Tasks.Task EditQuestionAsync(IOT_Game.GameServiceReference.Question question) {
            return base.Channel.EditQuestionAsync(question);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.Category>> GetCategoryAsync() {
            return base.Channel.GetCategoryAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<IOT_Game.GameServiceReference.RankViewModel>> GetRanksAsync() {
            return base.Channel.GetRanksAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGameService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGameService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:32596/GameService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return GameServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IGameService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return GameServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IGameService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IGameService,
        }
    }
}
